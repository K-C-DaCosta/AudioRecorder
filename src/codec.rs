use crate::{collections::NibbleList, math::FixedParabola};

use super::{
    collections::{BitStream, CircularStack},
    math, signal,
};

use std::ops::{Deref, DerefMut};

const NORMALIZE_FACTOR: f32 = 1.0 / i16::MAX as f32;

fn normalize_sample<T>(samp: T) -> f32
where
    T: Clone,
    i32: From<T>,
{
    i32::from(samp) as f32 * NORMALIZE_FACTOR
}

fn truncate_sample(samp: f32) -> i16 {
    (samp.clamp(-1.0, 1.0) * (i16::MAX as f32)) as i16
}

#[derive(Copy, Clone, Default)]
pub struct StreamInfo {
    pub sample_rate: u32,
    pub channels: u32,
}
pub struct AudioStream {
    info: Option<StreamInfo>,
    pub stream: BitStream,
}
impl AudioStream {
    pub fn new() -> Self {
        Self {
            info: None,
            stream: BitStream::new(),
        }
    }
}

impl Deref for AudioStream {
    type Target = BitStream;
    fn deref(&self) -> &Self::Target {
        &self.stream
    }
}

impl DerefMut for AudioStream {
    fn deref_mut(&mut self) -> &mut Self::Target {
        &mut self.stream
    }
}

#[derive(Copy, Clone)]
pub enum CodecState {
    Init,
    Encoding,
    Decoding,
}
pub struct AudioStreamCodec {
    pub state: CodecState,
    pub sample_history: CircularStack<i16>,
    pub stream: AudioStream,
    pub read_cursor: usize,
    pub num_samples: u32,
    /// its stores `log_2(divisor)`, where `divisor =  2^k`, for some k
    pub divisor_exp_list: NibbleList,
    pub divisor_cursor: usize,
}
impl AudioStreamCodec {
    pub fn new() -> Self {
        Self {
            state: CodecState::Init,
            sample_history: CircularStack::new(),
            stream: AudioStream::new(),
            num_samples: 0,
            read_cursor: 0,
            divisor_cursor: 0,
            divisor_exp_list: NibbleList::new(),
        }
    }

    pub fn set_info(&mut self, info: StreamInfo) {
        self.stream.info = Some(info);
    }

    //switches to decode mode
    pub fn init(&mut self) {
        self.state = CodecState::Init;
        self.stream.seek_start();
        self.divisor_cursor = 0;
        self.divisor_exp_list.clear();
    }

    pub fn compute_optimal_divisor_exponent(
        sample_history_ref: &CircularStack<i16>,
        remaining_samples: &[f32],
    ) -> i16 {
        let mut bit_sum_table = [0; 16];
        let mut parabola = FixedParabola::new();
        let mut sample_history = sample_history_ref.clone();
        for &sample in remaining_samples.iter() {
            let current = truncate_sample(sample);
            parabola.f = [
                normalize_sample(sample_history.prev(3)),
                normalize_sample(sample_history.prev(2)),
                normalize_sample(sample_history.prev(1)),
            ];
            parabola.compute_coefs();
            let predicted = truncate_sample(parabola.eval(3.0));
            let entropy = (current as i32 - predicted as i32).abs() as u32;
            for k in 1..16 {
                let quotient_bits = (entropy >> k) + 1;
                let remainder_bits = k as u32;
                bit_sum_table[k] += quotient_bits + remainder_bits + 1;
            }
            sample_history.push(current);
        }

        bit_sum_table
            .iter()
            .enumerate()
            .skip(1)
            .filter(|&(_, &b)| b > 0)
            .min_by(|(_, a), (_, b)| a.cmp(b))
            .map(|(idx, _)| idx as i16)
            .unwrap_or(1)
    }

    pub fn encode(&mut self, pcm: &[f32]) {
        let mut parabola = FixedParabola::new();
        let stream = &mut self.stream;
        let mut max_entropy: i16 = 0;

        match self.state {
            CodecState::Init => {
                for k in 0..3 {
                    let samp = pcm[k];
                    let truncated = truncate_sample(samp);
                    stream.write::<u16>(truncated as u16);
                    self.sample_history.push(truncated);
                }

                let divisor_exp =
                    Self::compute_optimal_divisor_exponent(&self.sample_history, &pcm[3..]);
                self.divisor_exp_list.push(divisor_exp as u8);
                let divisor = 1 << divisor_exp;

                println!("best divisor = {}", divisor);

                //entropy encode
                for &sample in pcm[3..].iter() {
                    let current = truncate_sample(sample);

                    parabola.f = [
                        normalize_sample(self.sample_history.prev(3)),
                        normalize_sample(self.sample_history.prev(2)),
                        normalize_sample(self.sample_history.prev(1)),
                    ];
                    parabola.compute_coefs();
                    let predicted = truncate_sample(parabola.eval(3.0));

                    let entropy = (current as i32 - predicted as i32)
                        .clamp(i16::MIN as i32 + 1, i16::MAX as i32 - 1)
                        as i16;

                    max_entropy = max_entropy.max(entropy);
                    stream.write_compressed(divisor_exp, entropy);
                    self.sample_history.push(current);
                }

                println!("MAX ENTROPY={}", max_entropy);
                self.num_samples += pcm.len() as u32;
                self.state = CodecState::Encoding;
            }
            CodecState::Encoding => {
                let divisor_exp =
                    Self::compute_optimal_divisor_exponent(&self.sample_history, &pcm[..]);
                self.divisor_exp_list.push(divisor_exp as u8);

                for &sample in pcm[..].iter() {
                    let current = truncate_sample(sample);

                    parabola.f = [
                        normalize_sample(self.sample_history.prev(3)),
                        normalize_sample(self.sample_history.prev(2)),
                        normalize_sample(self.sample_history.prev(1)),
                    ];
                    parabola.compute_coefs();
                    let predicted = truncate_sample(parabola.eval(3.0));

                    let entropy = (current as i32 - predicted as i32)
                        .clamp(i16::MIN as i32 + 1, i16::MAX as i32 - 1)
                        as i16;

                    max_entropy = max_entropy.max(entropy);
                    stream.write_compressed(divisor_exp, entropy);
                    self.sample_history.push(current);
                }
            }
            _ => panic!("invalid state"),
        }
    }
    pub fn decode(&mut self, out_samples: &mut [f32]) -> Option<usize> {
        let stream = &mut self.stream;
        let mut parabola = FixedParabola::new();

        match self.state {
            CodecState::Init => {
                let divisor_exp = self.divisor_exp_list.get(self.divisor_cursor) as i16;

                let num_samples_pre_read = 3;
                //write starting samples into the stream
                for _ in 0..num_samples_pre_read {
                    let samp = stream.read::<u16>() as i16;
                    self.sample_history.push(samp);
                }
                self.read_cursor = num_samples_pre_read as usize;

                let lower_bound = self.read_cursor;
                let upper_bound = (self.read_cursor + out_samples.len()
                    - num_samples_pre_read as usize)
                    .min(self.num_samples as usize);

                for k in 0..num_samples_pre_read {
                    let offset = num_samples_pre_read as u32 - k as u32;
                    out_samples[k] = normalize_sample(self.sample_history.prev(offset));
                }

                let mut samples_read = num_samples_pre_read as usize;

                //entropy decode
                for _ in lower_bound..upper_bound {
                    let entropy = stream.read_compressed(divisor_exp);
                    parabola.f = [
                        normalize_sample(self.sample_history.prev(3)),
                        normalize_sample(self.sample_history.prev(2)),
                        normalize_sample(self.sample_history.prev(1)),
                    ];
                    parabola.compute_coefs();
                    let predicted = truncate_sample(parabola.eval(3.0));
                    let current = entropy + predicted;

                    out_samples[samples_read] = normalize_sample(current).clamp(-1.0, 1.0);
                    samples_read += 1;

                    self.sample_history.push(current);
                    self.divisor_cursor += 1;
                }
                self.state = CodecState::Decoding;
                Some(samples_read)
            }
            CodecState::Decoding => {
                unimplemented!("generalized decoding not implemented");

                // let mut samples_read = 0;
                // let lower_bound = self.read_cursor;
                // let upper_bound =
                //     (self.read_cursor + out_samples.len()).min(self.num_samples as usize);

                // for _ in lower_bound..upper_bound {
                //     let entropy = stream.read_compressed_number::<2>() as i32;
                //     let prev_t1 = self.sample_history.prev(1) as i32;
                //     let prev_t2 = self.sample_history.prev(2) as i32;
                //     let predicted = (prev_t1 - prev_t2) * 2 + prev_t2;
                //     let current = entropy + predicted;
                //     out_samples[samples_read] = current as f32 * NORMALIZE_FACTOR;
                //     samples_read += 1;
                //     self.sample_history.push(current as i16);
                // }

                // Some(samples_read)
            }
            _ => panic!("invalid state"),
        }
    }
}

mod test {

    #[allow(unused_imports)]
    use super::{AudioStreamCodec, StreamInfo};
    #[allow(unused_imports)]
    use crate::math;
    #[allow(unused_imports)]
    use crate::signal;

    #[test]
    fn real_mic_data() {
        let data = [
            0.045305233,
            0.04721418,
            0.048918594,
            0.050359443,
            0.051188603,
            0.05189499,
            0.052524857,
            0.053304825,
            0.054148167,
            0.05504783,
            0.05625292,
            0.057698477,
            0.060020547,
            0.06262642,
            0.06552113,
            0.06825644,
            0.07070536,
            0.0726853,
            0.073870346,
            0.07445306,
            0.073756434,
            0.071394846,
            0.068000086,
            0.06271694,
            0.05641891,
            0.04930469,
            0.04087414,
            0.03238532,
            0.023834335,
            0.015901646,
            0.008635999,
            0.0026888824,
            -0.0011121484,
            -0.0036575478,
            -0.0038720546,
            -0.0019625796,
            0.0014622075,
            0.008200505,
            0.015762752,
            0.024193577,
            0.03343338,
            0.043029696,
            0.053139437,
            0.063064285,
            0.07264477,
            0.081254855,
            0.08865331,
            0.095194645,
            0.09956227,
            0.10211596,
            0.10315804,
            0.10025215,
            0.0954407,
            0.088088654,
            0.076744646,
            0.06332765,
            0.046529055,
            0.02655528,
            0.004904246,
            -0.019258456,
            -0.044663247,
            -0.070946604,
            -0.098734125,
            -0.1260922,
            -0.15298128,
            -0.17698431,
            -0.19951509,
            -0.21982856,
            -0.23564103,
            -0.24845949,
            -0.2551438,
            -0.2573485,
            -0.25659615,
            -0.24972454,
            -0.23868707,
            -0.22405271,
            -0.20379935,
            -0.18197076,
            -0.1580993,
            -0.13230735,
            -0.10624821,
            -0.08038615,
            -0.056930117,
            -0.035101216,
            -0.016980784,
            -0.0019203299,
            0.010831038,
            0.016715037,
            0.019323718,
            0.018227156,
            0.012569593,
            0.0047154874,
            -0.0064396686,
            -0.021444455,
            -0.038156256,
            -0.057110876,
            -0.07697129,
            -0.09738456,
            -0.118534945,
            -0.13940549,
            -0.16002573,
            -0.17890197,
            -0.19681838,
            -0.21340083,
            -0.22696924,
            -0.23847817,
            -0.24609792,
            -0.24987099,
            -0.25119585,
            -0.24742156,
            -0.23942317,
            -0.22829741,
            -0.21094738,
            -0.19120747,
            -0.16866612,
            -0.14247355,
            -0.11497292,
            -0.08569833,
            -0.056150235,
            -0.026881728,
            0.0010130466,
            0.026755499,
            0.05093067,
            0.07082105,
            0.087875165,
            0.10230095,
            0.111271665,
            0.11781775,
            0.121006265,
            0.12088574,
            0.11933883,
            0.11573636,
            0.1110906,
            0.105981685,
            0.10072614,
            0.0959315,
            0.09149577,
            0.08853477,
            0.08629995,
            0.08494696,
            0.08441721,
            0.08424795,
            0.08461167,
            0.08560077,
            0.08679965,
            0.08805865,
            0.08922121,
            0.09033014,
            0.09145751,
            0.09248145,
            0.09340611,
            0.094429076,
            0.09563613,
            0.09712947,
            0.099126205,
            0.101447135,
            0.10438493,
            0.1077305,
            0.111312315,
            0.115271375,
            0.11944503,
            0.12377979,
            0.12784398,
            0.1316726,
            0.13520476,
            0.13844049,
            0.14159764,
            0.14467254,
            0.14779368,
            0.15093744,
            0.15411323,
            0.15742198,
            0.16081482,
            0.16428345,
            0.1679104,
            0.17169483,
            0.1753106,
            0.17869669,
            0.18171899,
            0.1837469,
            0.18501519,
            0.18468747,
            0.18225922,
            0.1783963,
            0.17115745,
            0.16161567,
            0.1502655,
            0.1352015,
            0.118622586,
            0.10008197,
            0.07928763,
            0.057906162,
            0.035956085,
            0.014088564,
            -0.007569073,
            -0.028407676,
            -0.047487825,
            -0.065283425,
            -0.07967639,
            -0.09220235,
            -0.10280602,
            -0.10910311,
            -0.113492176,
            -0.11514732,
            -0.114276364,
            -0.11212377,
            -0.10787393,
            -0.10218652,
            -0.09570423,
            -0.08836765,
            -0.08085609,
            -0.07320199,
            -0.06576142,
            -0.058652587,
            -0.051989187,
            -0.046135075,
            -0.040813167,
            -0.036435537,
            -0.033525433,
            -0.03152477,
            -0.031355947,
            -0.032641113,
            -0.034972996,
            -0.03968246,
            -0.045542717,
            -0.052630574,
            -0.061951585,
            -0.07218322,
            -0.0837041,
            -0.09597093,
            -0.10842672,
            -0.120868936,
            -0.13269511,
            -0.14403643,
            -0.15385684,
            -0.16249996,
            -0.17015053,
            -0.17531765,
            -0.1793398,
            -0.1818306,
            -0.1822283,
            -0.18169254,
            -0.17975423,
            -0.17675984,
            -0.1731534,
            -0.16844821,
            -0.16323042,
            -0.15766875,
            -0.15201017,
            -0.14631507,
            -0.14057943,
            -0.13462445,
            -0.12853038,
            -0.12221604,
            -0.11529705,
            -0.107989065,
            -0.09989973,
            -0.09127258,
            -0.08227507,
            -0.07241109,
            -0.062008,
            -0.051133923,
            -0.040205956,
            -0.029180512,
            -0.018015385,
            -0.00696964,
            0.0037881953,
            0.013868144,
            0.02327049,
            0.03225607,
            0.04041842,
            0.047486506,
            0.053755656,
            0.058499254,
            0.06282762,
            0.06668068,
            0.069282204,
            0.07119201,
            0.072020374,
            0.07163767,
            0.070508465,
            0.06791387,
            0.064329065,
            0.06013731,
            0.055157274,
            0.049785677,
            0.044059575,
            0.038266473,
            0.03292442,
            0.02826627,
            0.024534654,
            0.02149438,
            0.019811876,
            0.020147283,
            0.02172212,
            0.02570592,
            0.03144853,
            0.03850634,
            0.048424922,
            0.059307866,
            0.07133474,
            0.08477989,
            0.09849605,
            0.11242124,
            0.12573172,
            0.13850886,
            0.14994034,
            0.15971406,
            0.1683124,
            0.1739859,
            0.17788419,
            0.18011819,
            0.17910266,
            0.17684935,
            0.1729103,
            0.16709445,
            0.16038437,
            0.15227549,
            0.14337023,
            0.13403973,
            0.124173515,
            0.11418994,
            0.1041236,
            0.0943644,
            0.08479832,
            0.07546934,
            0.06685595,
            0.058761276,
            0.051561765,
            0.045272235,
            0.03949934,
            0.034661345,
            0.030794904,
            0.027586818,
            0.025646213,
            0.024077393,
            0.02286968,
            0.022242993,
            0.021811966,
            0.02164287,
            0.021073997,
            0.020145008,
            0.01842396,
            0.01584669,
            0.012703466,
            0.00831141,
            0.0031321924,
            -0.0026543334,
            -0.009764531,
            -0.017178705,
            -0.024979535,
            -0.032736424,
            -0.040537655,
            -0.048449554,
            -0.055906907,
            -0.062834255,
            -0.06812073,
            -0.07218368,
            -0.07537189,
            -0.076432995,
            -0.07602647,
            -0.074143685,
            -0.07017855,
            -0.06546833,
            -0.059744924,
            -0.05308928,
            -0.04627897,
            -0.039666995,
            -0.034047015,
            -0.029121079,
            -0.025909726,
            -0.024121601,
            -0.023464464,
            -0.025839213,
            -0.029379547,
            -0.03443431,
            -0.04136,
            -0.049176168,
            -0.0583728,
            -0.06840512,
            -0.078792766,
            -0.089477465,
            -0.100343905,
            -0.11131303,
            -0.12208769,
            -0.13255244,
            -0.1426946,
            -0.15216352,
            -0.16108093,
            -0.16912585,
            -0.17547697,
            -0.18076324,
            -0.18398578,
            -0.18467593,
            -0.18360803,
            -0.1782661,
            -0.17024696,
            -0.160023,
            -0.14532667,
            -0.12872359,
            -0.109603964,
            -0.087828934,
            -0.065266944,
            -0.041868567,
            -0.018521713,
            0.00443173,
            0.025564712,
            0.04395677,
            0.060361143,
            0.07212693,
            0.081388794,
            0.08794836,
            0.08899012,
            0.087756425,
            0.08328284,
            0.07588964,
            0.06703665,
            0.055850156,
            0.043790136,
            0.031350497,
            0.01941977,
            0.008186852,
            -0.0024506587,
            -0.011083536,
            -0.018621746,
            -0.024675751,
            -0.029110482,
            -0.03271634,
            -0.034972873,
            -0.035713606,
            -0.035750855,
            -0.035129674,
            -0.03425837,
            -0.033161875,
            -0.030495621,
            -0.0271571,
            -0.023066975,
            -0.0182309,
            -0.012755687,
            -0.0062132026,
            0.0018218628,
            0.010497808,
            0.019979395,
            0.029911747,
            0.040124565,
            0.050772157,
            0.0609432,
            0.07069208,
            0.07842387,
            0.08529876,
            0.09101199,
            0.09475751,
            0.09719154,
            0.09718801,
            0.095136926,
            0.092041485,
            0.087665424,
            0.08258959,
            0.077007025,
            0.07071099,
            0.06463462,
            0.058813296,
            0.053734347,
            0.04888721,
            0.04433408,
            0.04010007,
            0.03597016,
            0.031881213,
            0.027232246,
            0.022161378,
            0.01582401,
            0.008693017,
            0.000835265,
            -0.008493461,
            -0.018247344,
            -0.028552674,
            -0.038604967,
            -0.048163336,
            -0.056522336,
            -0.06289123,
            -0.067928314,
            -0.06994961,
            -0.069563545,
            -0.06736223,
            -0.060875095,
            -0.052921318,
            -0.043207534,
            -0.031597324,
            -0.019266577,
            -0.0059364354,
            0.007088236,
            0.01960873,
            0.030510826,
            0.039956935,
            0.048344724,
            0.053863157,
            0.057508804,
            0.05937834,
            0.058488473,
            0.05651387,
            0.053050943,
            0.048103,
            0.042685747,
            0.036838554,
            0.031109177,
            0.025495367,
            0.02029571,
            0.015553409,
            0.011164373,
            0.007996779,
            0.005440837,
            0.003645198,
            0.0028721509,
            0.0026152534,
            0.003167745,
            0.0047670947,
            0.0070290025,
            0.0106475325,
            0.0154387485,
            0.021055147,
            0.02857903,
            0.037373558,
            0.047416605,
            0.059142336,
            0.07117844,
            0.0835532,
            0.09611413,
            0.108425915,
            0.1198738,
            0.1291447,
            0.13692985,
            0.14122173,
            0.14283873,
            0.14238,
            0.13639957,
            0.12807654,
            0.11673475,
            0.10210106,
            0.08637853,
            0.069293655,
            0.0515095,
            0.03382386,
            0.017613653,
            0.004237319,
            -0.007139708,
            -0.014098353,
            -0.018098686,
            -0.019088311,
            -0.0133907925,
            -0.005345384,
            0.005881192,
            0.019947026,
            0.03548663,
            0.05349141,
            0.072448045,
            0.09173232,
            0.1101169,
            0.12722206,
            0.14329897,
            0.15623876,
            0.16710874,
            0.1752515,
            0.1783863,
            0.17897071,
            0.17546615,
            0.16708255,
            0.1557771,
            0.13885619,
            0.118073486,
            0.094545245,
            0.06517376,
            0.033204608,
            -0.0015048746,
            -0.039893687,
            -0.07932414,
            -0.12006237,
            -0.1604208,
            -0.1999967,
            -0.23733369,
            -0.2704634,
            -0.30057943,
            -0.3228621,
            -0.33984354,
            -0.35240743,
            -0.35359153,
            -0.34946236,
            -0.3382577,
            -0.3181308,
            -0.2939088,
            -0.26342583,
            -0.22850233,
            -0.19161193,
            -0.15309593,
            -0.11530293,
            -0.07816058,
            -0.04507735,
            -0.015645847,
            0.009797948,
            0.026514335,
            0.03913084,
            0.045690678,
            0.045011953,
            0.0403436,
            0.02863855,
            0.012376519,
            -0.0066458434,
            -0.02965527,
            -0.054380424,
            -0.08058472,
            -0.107889906,
            -0.1347709,
            -0.16100001,
            -0.18541643,
            -0.20873943,
            -0.23013332,
            -0.24873544,
            -0.26544538,
            -0.27782655,
            -0.28714165,
            -0.29418555,
            -0.29562104,
            -0.29368052,
            -0.2879211,
            -0.27603662,
            -0.2613161,
            -0.24238002,
            -0.21843232,
            -0.19205174,
            -0.16198999,
            -0.12993386,
            -0.09669458,
            -0.06218367,
            -0.028393116,
            0.004753112,
            0.034348197,
            0.061666407,
            0.08578399,
            0.10438304,
            0.11998651,
            0.13050702,
            0.13625224,
            0.13929626,
            0.13793114,
            0.13486673,
            0.13057633,
            0.1251193,
            0.11963665,
            0.11412396,
            0.11000535,
            0.106992766,
            0.10586533,
            0.10670318,
            0.10857883,
            0.1121847,
            0.11692308,
            0.12228512,
            0.1276559,
            0.13250999,
            0.13688563,
            0.14016505,
            0.14256877,
            0.14369765,
            0.14296462,
            0.14145757,
            0.13887286,
            0.1354857,
            0.13168982,
            0.12746048,
            0.1236033,
            0.1200386,
            0.11784905,
            0.11623501,
            0.11531962,
            0.11563186,
            0.11676575,
            0.1192832,
            0.1228919,
            0.12694855,
            0.13143763,
            0.13645901,
            0.14182067,
            0.14763868,
            0.15342245,
            0.15917332,
            0.16542886,
            0.17199832,
            0.17902637,
            0.18620309,
            0.19341925,
            0.20065573,
            0.20767465,
            0.21439469,
            0.21977459,
            0.2235801,
            0.2261702,
            0.22493741,
            0.22148852,
            0.21525106,
            0.2041651,
            0.19063382,
            0.17325565,
            0.1517396,
            0.1280502,
            0.10087474,
            0.07212819,
            0.042425033,
            0.012393379,
            -0.016759995,
            -0.04504027,
            -0.070446,
            -0.093881585,
            -0.1143525,
            -0.12972976,
            -0.14247236,
            -0.1508278,
            -0.15549588,
            -0.15781802,
            -0.15544221,
            -0.15103686,
            -0.14503725,
            -0.1372242,
            -0.12879127,
            -0.11955693,
            -0.11003403,
            -0.10075367,
            -0.09211457,
            -0.084089,
            -0.076468244,
            -0.06972099,
            -0.063988626,
            -0.058943085,
            -0.054940715,
            -0.051566057,
            -0.04883769,
            -0.04822991,
            -0.048517153,
            -0.050073605,
            -0.05310583,
            -0.057128165,
            -0.06313812,
            -0.07076252,
            -0.07932147,
            -0.08916773,
            -0.099723876,
            -0.11085772,
            -0.12285937,
            -0.13457072,
            -0.14587624,
            -0.15568955,
            -0.16477796,
            -0.17272648,
            -0.17884922,
            -0.18376374,
            -0.18603238,
            -0.18693893,
            -0.18689166,
            -0.18516386,
            -0.18253046,
            -0.17893113,
            -0.17457147,
            -0.17013757,
            -0.16568759,
            -0.16134465,
            -0.1570991,
            -0.153085,
            -0.1489549,
            -0.14467274,
            -0.13958895,
            -0.13358393,
            -0.12680262,
            -0.11849049,
            -0.10910073,
            -0.09824574,
            -0.08529225,
            -0.0714084,
            -0.05613166,
            -0.039738875,
            -0.022835897,
            -0.0054610437,
            0.011682098,
            0.028631104,
            0.044560146,
            0.059400294,
            0.07303785,
            0.08399502,
            0.09367038,
            0.10143665,
            0.10657477,
            0.11027047,
            0.1114327,
            0.11091146,
            0.10930379,
            0.10565693,
            0.10105421,
            0.09561643,
            0.08898397,
            0.0818371,
            0.073994756,
            0.065598056,
            0.057190806,
            0.04901707,
            0.04123977,
            0.033754632,
            0.0270131,
            0.021534441,
            0.017009506,
            0.015289203,
            0.014976182,
            0.016274057,
            0.020700125,
            0.026673835,
            0.03499934,
            0.045691215,
            0.057580795,
            0.07137606,
            0.08617768,
            0.101543665,
            0.11716795,
            0.1322593,
            0.14686826,
            0.15946195,
            0.17070484,
            0.18002954,
            0.18606392,
            0.19038853,
            0.19187786,
            0.1906142,
            0.18769144,
            0.18166694,
            0.17405349,
            0.16526316,
            0.15441799,
            0.14300106,
            0.13090603,
            0.1187187,
            0.10660211,
            0.09465372,
            0.08336536,
            0.07260115,
            0.06309564,
            0.054339826,
            0.04608788,
            0.038839005,
            0.032398917,
            0.026717091,
            0.022019856,
            0.017552072,
            0.013367338,
            0.009924866,
            0.0068856543,
            0.00453889,
            0.0023324855,
            0.00018735335,
            -0.0019491508,
            -0.0041019456,
            -0.006272883,
            -0.008956839,
            -0.011901665,
            -0.015167044,
            -0.019035203,
            -0.023264097,
            -0.02808711,
            -0.033317488,
            -0.038801562,
            -0.04479284,
            -0.0510668,
            -0.057469334,
            -0.063409835,
            -0.069046415,
            -0.07438787,
            -0.078792766,
            -0.08232566,
            -0.0845329,
            -0.08500515,
            -0.08466141,
            -0.08306095,
            -0.08034542,
            -0.07699095,
            -0.07267576,
            -0.06808682,
            -0.06328803,
            -0.05850241,
            -0.053981196,
            -0.049796656,
            -0.046889994,
            -0.04486388,
            -0.04437095,
            -0.045553263,
            -0.047709223,
            -0.051671874,
            -0.057210304,
            -0.06381241,
            -0.07217948,
            -0.08092107,
            -0.090039335,
            -0.09965452,
            -0.10945168,
            -0.11949773,
            -0.12888491,
            -0.13771324,
            -0.14530635,
            -0.15207255,
            -0.15827559,
            -0.16316245,
            -0.1666612,
            -0.1690568,
            -0.16894144,
            -0.16772912,
            -0.16508871,
            -0.1597834,
            -0.15310876,
            -0.14423685,
            -0.13324313,
            -0.121024646,
            -0.1065718,
            -0.09063329,
            -0.07370183,
            -0.0555835,
            -0.03757927,
            -0.019692224,
            -0.002774184,
            0.013358169,
            0.028249588,
            0.040704418,
            0.051785972,
            0.0604075,
            0.06674283,
            0.07157216,
            0.07319045,
            0.07332985,
            0.07225125,
            0.06909244,
            0.06488476,
            0.05928386,
            0.052447528,
            0.045398705,
            0.038325932,
            0.031132199,
            0.023878902,
            0.016549796,
            0.009791762,
            0.003445086,
            -0.001995523,
            -0.0071166004,
            -0.011892792,
            -0.015300341,
            -0.017947488,
            -0.019434713,
            -0.019879546,
            -0.01968176,
            -0.018241309,
            -0.015415588,
            -0.011709319,
            -0.0063864207,
            -0.00024779374,
            0.006586855,
            0.015056729,
            0.024206862,
            0.034266226,
            0.04484649,
            0.055454716,
            0.065906025,
            0.07594184,
            0.08560902,
            0.09417966,
            0.10157509,
            0.10811205,
            0.11274938,
            0.116329916,
            0.11872896,
            0.11873329,
            0.11767359,
            0.11505553,
            0.110842526,
            0.10575344,
            0.0991243,
            0.09134918,
            0.082852654,
            0.07317243,
            0.06297008,
            0.052306242,
            0.041020304,
            0.029703014,
            0.0183701,
            0.0074200593,
            -0.0032832841,
            -0.0135343205,
            -0.023049034,
            -0.032000303,
            -0.039447434,
            -0.045542337,
            -0.050634295,
            -0.053451158,
            -0.055103958,
            -0.05540864,
            -0.053215392,
            -0.049958367,
            -0.045154404,
            -0.03893705,
            -0.03196041,
            -0.02368709,
            -0.014820691,
            -0.005625784,
            0.0036392468,
            0.012620602,
            0.02134304,
            0.02880328,
            0.03555217,
            0.041298077,
            0.0455429,
            0.04893538,
            0.050836317,
            0.05154843,
            0.05159917,
            0.05064826,
            0.0492585,
            0.047549658,
            0.04572346,
            0.044001095,
            0.042403094,
            0.041095704,
            0.039989673,
            0.039223038,
            0.038914613,
            0.038854834,
            0.03922157,
            0.039864954,
            0.040694762,
            0.041892104,
            0.043136626,
            0.0444259,
            0.045653105,
            0.04710095,
            0.04890294,
            0.051271163,
            0.053720407,
            0.056056812,
            0.058040425,
            0.059826735,
            0.061326828,
            0.062499423,
            0.06341483,
            0.06297754,
            0.061920002,
            0.060091145,
            0.057607226,
            0.054725178,
            0.051181983,
            0.04737691,
            0.043717116,
            0.04101348,
            0.03893442,
            0.037308596,
            0.03688874,
            0.03785152,
            0.04017287,
            0.044834316,
            0.050405882,
            0.05723362,
            0.065761805,
            0.0749589,
            0.084992915,
            0.09530292,
            0.10577319,
            0.11649152,
            0.12675066,
            0.13665347,
            0.14411536,
            0.15026811,
            0.15473384,
            0.15625195,
            0.15577945,
            0.1518364,
            0.14348981,
            0.13269405,
            0.117651984,
            0.09934098,
            0.07874087,
            0.053323425,
            0.026097497,
            -0.0029689374,
            -0.034003463,
            -0.0654179,
            -0.09723772,
            -0.12821288,
            -0.15828007,
            -0.18615475,
            -0.2110779,
            -0.23399961,
            -0.25228015,
            -0.26690412,
            -0.27858773,
            -0.28318763,
            -0.28493124,
            -0.28294393,
            -0.27517837,
            -0.26455936,
            -0.24942872,
            -0.23073864,
            -0.21019843,
            -0.18688112,
            -0.16231453,
            -0.13695762,
            -0.11162681,
            -0.08737634,
            -0.06426464,
            -0.044543285,
            -0.026836747,
            -0.0122052245,
            -0.0026088958,
            0.00411662,
            0.0056430195,
            0.0031007282,
            -0.0020580688,
            -0.012365074,
            -0.025579387,
            -0.04121837,
            -0.06071136,
            -0.08132091,
            -0.10338089,
            -0.12654091,
            -0.14976671,
            -0.17270622,
            -0.19407532,
            -0.21435231,
            -0.23207864,
            -0.24719107,
            -0.26035255,
            -0.26795456,
            -0.27288443,
            -0.27489594,
            -0.27181345,
            -0.26606086,
            -0.25626284,
            -0.24239932,
            -0.22654103,
            -0.20757413,
            -0.18610573,
            -0.16312256,
            -0.13795517,
            -0.11226928,
            -0.086135685,
            -0.059892885,
            -0.034065567,
            -0.008836722,
            0.014680013,
            0.03707175,
            0.057407483,
            0.07513385,
            0.091268346,
            0.10429764,
            0.1152301,
            0.124622986,
            0.13059014,
            0.13511586,
            0.13801078,
            0.13888118,
            0.13887362,
            0.13758644,
            0.13515598,
            0.1322992,
            0.12906718,
            0.12564522,
            0.122110404,
            0.11845201,
            0.115107134,
            0.11204266,
            0.10950831,
            0.10711677,
            0.10490907,
            0.103176,
            0.10167316,
            0.100535385,
            0.099586025,
            0.09873892,
            0.098041445,
            0.09755091,
            0.0972207,
            0.0974908,
            0.09800183,
            0.0987952,
            0.100237064,
            0.1021499,
            0.10485289,
            0.10858694,
            0.11295137,
            0.11855085,
            0.12505297,
            0.13211407,
            0.13987163,
            0.14790982,
            0.156208,
            0.16484705,
            0.17340764,
            0.1818228,
            0.18946856,
            0.19657433,
            0.20262976,
            0.20761219,
            0.21186969,
            0.21445885,
            0.2153498,
            0.21495473,
            0.21153836,
            0.20694043,
            0.2009079,
            0.19220169,
            0.18213378,
            0.16993901,
            0.15584782,
            0.1407086,
            0.12373366,
            0.105533816,
            0.08656509,
            0.06672408,
            0.046642177,
            0.0263273,
            0.006283,
            -0.0131691005,
            -0.0316961,
            -0.048718106,
            -0.06473408,
            -0.07880024,
            -0.09019074,
            -0.099958286,
            -0.106773466,
            -0.11180026,
            -0.11544981,
            -0.1153505,
            -0.11406713,
            -0.11129409,
            -0.10720369,
            -0.10238768,
            -0.09639462,
            -0.089956015,
            -0.08354154,
            -0.077847935,
            -0.072433434,
            -0.06722082,
            -0.06253408,
            -0.05863996,
            -0.055533927,
            -0.053640164,
            -0.052228823,
            -0.051487364,
            -0.052126825,
            -0.05345417,
            -0.05589237,
            -0.059003618,
            -0.06259074,
            -0.06737479,
            -0.07304008,
            -0.0793975,
            -0.08672193,
            -0.09435787,
            -0.10239636,
            -0.11129511,
            -0.120483056,
            -0.13003658,
            -0.13940047,
            -0.14861386,
            -0.15744226,
            -0.16567072,
            -0.17344323,
            -0.17975219,
            -0.18526706,
            -0.18996416,
            -0.19275072,
            -0.19452943,
            -0.19481637,
            -0.19375266,
            -0.19198084,
            -0.18901557,
            -0.18456456,
            -0.17919353,
            -0.17217647,
            -0.16442636,
            -0.15607972,
            -0.14603393,
            -0.13520882,
            -0.12335745,
            -0.11028211,
            -0.09657392,
            -0.08184132,
            -0.066198125,
            -0.050111048,
            -0.03345354,
            -0.016614668,
            0.0003213302,
            0.016874988,
            0.032793626,
            0.048034936,
            0.06134142,
            0.07354926,
            0.08408353,
            0.09245322,
            0.09948732,
            0.10394608,
            0.105667084,
            0.10567152,
            0.1026325,
            0.09820141,
            0.09259658,
            0.0845244,
            0.07579444,
            0.0662151,
            0.056612186,
            0.04708705,
            0.03776198,
            0.029299859,
            0.021590665,
            0.016066758,
            0.012035838,
            0.009077394,
            0.008168865,
            0.008585983,
            0.0104677,
            0.014830854,
            0.020105055,
            0.02663236,
            0.034553908,
            0.043236926,
            0.053250916,
            0.06391469,
            0.07494196,
            0.0862349,
            0.09759902,
            0.10902332,
            0.120193355,
            0.13096265,
            0.14116082,
            0.1502232,
            0.15856804,
            0.16561502,
            0.17100304,
            0.17534433,
            0.17752975,
            0.17800969,
            0.17723918,
            0.17392503,
            0.16971424,
            0.16447802,
            0.15755428,
            0.14992774,
            0.14128861,
            0.132219,
            0.12300877,
            0.11373555,
            0.10451117,
            0.09534765,
            0.08654362,
            0.07805712,
            0.06985802,
            0.062228225,
            0.05470346,
            0.04730476,
            0.03965211,
            0.03187581,
            0.023902863,
            0.015796002,
            0.0075372723,
            -0.0012865355,
            -0.010353249,
            -0.01958344,
            -0.028343026,
            -0.03695128,
            -0.045380067,
            -0.053229183,
            -0.060322065,
            -0.06602526,
            -0.07023745,
            -0.073676094,
            -0.07586033,
            -0.07631828,
            -0.07560957,
            -0.07251632,
            -0.06859862,
            -0.06390799,
            -0.05778853,
            -0.051231563,
            -0.044100374,
            -0.037067696,
            -0.030196581,
            -0.023720987,
            -0.017858464,
            -0.01246818,
            -0.008395206,
            -0.0053864177,
            -0.0031878534,
            -0.0029255762,
            -0.0037232605,
            -0.0058234152,
            -0.010031679,
            -0.015142763,
            -0.02157814,
            -0.029613823,
            -0.038609397,
            -0.04945337,
            -0.06135667,
            -0.07395549,
            -0.08764468,
            -0.101997145,
            -0.11699368,
            -0.13253212,
            -0.14766616,
            -0.16209194,
            -0.17500217,
            -0.18692058,
            -0.19692649,
            -0.20356832,
            -0.20796369,
            -0.20729819,
            -0.20381775,
            -0.1981634,
            -0.18725546,
            -0.17408839,
            -0.15804487,
            -0.13925418,
            -0.11954686,
            -0.09867881,
            -0.07726005,
            -0.05585256,
            -0.03528553,
            -0.016197044,
            0.0018307122,
            0.017210426,
            0.03089185,
            0.042865235,
            0.051276147,
            0.058184892,
            0.06297638,
            0.06537918,
            0.066480674,
            0.0653218,
            0.062355876,
            0.058348916,
            0.052853495,
            0.046779178,
            0.040244102,
            0.032595966,
            0.024595622,
            0.016139122,
            0.0079008015,
            -0.00015802123,
            -0.0078833895,
            -0.015201616,
            -0.022116965,
            -0.027832998,
            -0.03254315,
            -0.03653092,
            -0.038815636,
            -0.039625585,
            -0.03889863,
            -0.03532087,
            -0.030732144,
            -0.024768878,
            -0.017089425,
            -0.008526572,
            0.0014998347,
            0.01191388,
            0.02245917,
            0.032559227,
            0.04222449,
            0.051531658,
            0.05939794,
            0.066213176,
            0.0716202,
            0.07502043,
            0.077605955,
            0.07903642,
            0.07942775,
            0.07927549,
            0.07831633,
            0.07713999,
            0.0758137,
            0.07428401,
            0.07275755,
            0.07123458,
            0.0697634,
            0.06807127,
            0.065968685,
            0.06298622,
            0.059560787,
            0.055422027,
            0.050597295,
            0.045279305,
            0.038660537,
            0.031379536,
            0.023533482,
            0.015142193,
            0.0067062564,
            -0.0017744283,
            -0.009748063,
            -0.01717526,
            -0.02346905,
            -0.028023224,
            -0.031476032,
            -0.032642946,
            -0.032363508,
            -0.031041875,
            -0.027775541,
            -0.023647493,
            -0.018556042,
            -0.012525242,
            -0.0063772695,
            -0.00018539513,
            0.005744916,
            0.011423904,
            0.016469017,
            0.020859424,
            0.024827125,
            0.028012399,
            0.030539121,
            0.03248375,
            0.033471834,
            0.034300327,
            0.034940936,
            0.035024717,
            0.034786187,
            0.033984303,
            0.03273771,
            0.031129077,
            0.028490499,
            0.02511963,
            0.021218807,
            0.016587675,
            0.011637692,
            0.0063184393,
            0.001014527,
            -0.0038436688,
            -0.007829278,
            -0.01039699,
            -0.0120898755,
            -0.012059272,
            -0.009984659,
            -0.006524371,
            -0.00009619491,
            0.00764928,
            0.016601397,
            0.027855447,
            0.039813165,
            0.052694283,
            0.06549972,
            0.07805093,
            0.08995512,
            0.10045095,
            0.10991466,
            0.11671011,
            0.12172565,
            0.12539889,
            0.12590353,
            0.12484065,
            0.12189696,
            0.116514325,
            0.1102159,
            0.102651864,
            0.093899295,
            0.08457217,
            0.07441619,
            0.06470861,
            0.055383317,
            0.047624536,
            0.040452182,
            0.033836156,
            0.029442906,
            0.026532818,
            0.025786916,
            0.026967768,
            0.029181395,
            0.03315445,
            0.03920765,
            0.04640575,
            0.05517325,
            0.06474237,
            0.074923076,
            0.08638881,
            0.09768185,
            0.108760096,
            0.11833374,
            0.12710118,
            0.1345759,
            0.13983059,
            0.14347251,
            0.14337035,
            0.14001022,
            0.13437065,
            0.12361263,
            0.10967601,
            0.092616096,
            0.07003858,
            0.04535972,
            0.017792284,
            -0.012433143,
            -0.043567136,
            -0.075596705,
            -0.10713976,
            -0.13809654,
            -0.16651155,
            -0.19212286,
            -0.21555847,
        ];

        let mut codec = AudioStreamCodec::new();
        codec.set_info(StreamInfo {
            channels: 1,
            sample_rate: 44100,
        });
        codec.encode(&data);

        let mut decoded = data.clone();
        codec.init();
        codec.decode(&mut decoded);
        println!("first 10:");
        println!("data  :{:?}", &data[0..10]);
        println!("decode:{:?}", &decoded[0..10]);

        println!("last 10:");
        println!("data  :{:?}", &data[1590..]);
        println!("decode:{:?}", &decoded[1590..]);

        let mean_squared_error = math::compute_mse(&decoded, &data);

        println!(
            "blocks allocated = {}\nbits written = {}\ncompression_ratio={:.3}\nMean Squared Error ={:.4}",
            codec.stream.stream.binary.len(),
            codec.stream.stream.capacity(),
            codec.stream.stream.capacity() as f32 / (data.len() * 16) as f32,
            mean_squared_error,
        );

        // let samples_read = codec.decode(&mut out_buffer[..]).unwrap();
        // println!("{:?}", &out_buffer[0..samples_read]);
    }

    #[test]
    fn sanity() {
        let mut codec = AudioStreamCodec::new();
        let data = [
            0.0, 0.0, 0.01, 0.01, 0.02, 0.02, 0.03, 0.03, 0.019, 0.020, 0.019, 0.018, 0.017,
        ];

        codec.set_info(StreamInfo {
            channels: 1,
            sample_rate: 44100,
        });

        codec.encode(&data);

        let mut out_buffer = data.clone();
        codec.init();
        let samples_read = codec.decode(&mut out_buffer[..]).unwrap();
        let mean_squared_error = math::compute_mse(&out_buffer, &data);

        println!("data   :{:?}", data);
        println!("decoded:{:?}", &out_buffer[0..samples_read]);
        println!(
            "blocks allocated = {}\nbits written = {}\ncompression_ratio={}\nMean Squared Error={:.6}",
            codec.stream.stream.binary.len(),
            codec.stream.stream.capacity(),
            codec.stream.stream.capacity() as f32 / (data.len() * 16) as f32,
            mean_squared_error
        );

        for (&input_sample, &decoded_sample) in data.iter().zip(out_buffer.iter()) {
            let close_enough = (input_sample - decoded_sample).abs() < 0.01;
            assert_eq!(close_enough, true, "accuracy threshold not met");
        }
    }
}
